{"version":3,"sources":["index.js","App.js"],"names":["ReactDOM","render","document","getElementById","App","state","opA","opB","operator","screen","handleClear","setState","handleResult","length","result","join","eval","handleCalc","value","type","isOpAPositive","newOpA","unshift","isOpBPositive","newOpB","console","log","aux","this","className","onClick","id","React","Component"],"mappings":"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","file":"static/js/main.cdd5a93b.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n  document.getElementById(\"root\")\n);\n","import \"./App.scss\";\nimport React from \"react\";\n//import { calculator } from \"./utils\";\n\nclass App extends React.Component {\n  state = {\n    opA: [],\n    opB: [],\n    operator: null,\n    screen: 0,\n  };\n\n  handleClear = () => {\n    this.setState({\n      screen: 0,\n      opA: [],\n      opB: [],\n      operator: null,\n    });\n  };\n\n  handleResult = () => {\n    if (\n      this.state.opA.length === 0 ||\n      this.state.opB.length === 0 ||\n      this.state.operator === null\n    ) {\n      return;\n    }\n    const result =\n      this.state.opA.join(\"\") + this.state.operator + this.state.opB.join(\"\");\n    //console.log(eval(result));\n    this.setState({ screen: eval(result) });\n  };\n\n  handleCalc = ({ value, type }) => {\n    if (type === \"percentage\") {\n      if (this.state.operator === null) {\n        return this.setState({\n          opA: [this.state.opA.join(\"\") / 100],\n          screen: [this.state.opA.join(\"\") / 100],\n        });\n      }\n      return this.setState({\n        opB: [this.state.opB.join(\"\") / 100],\n        screen: [this.state.opB.join(\"\") / 100],\n      });\n    }\n    if (type === \"negative\") {\n      if (this.state.operator === null) {\n        const isOpAPositive = this.state.opA.join(\"\") > 0;\n        const newOpA = this.state.opA.unshift();\n        return this.setState({\n          opA: isOpAPositive ? [\"-\", ...this.state.opA] : newOpA,\n          screen: isOpAPositive ? [\"-\", ...this.state.opA] : newOpA,\n        });\n      }\n      const isOpBPositive = this.state.opB.join(\"\") > 0;\n      const newOpB = this.state.opB.unshift();\n      return this.setState({\n        opB: isOpBPositive ? [\"-\", ...this.state.opB] : newOpB,\n        screen: isOpBPositive ? [\"-\", ...this.state.opB] : newOpB,\n      });\n    }\n    if (type === \"operator\") {\n      if (this.state.operator === null) {\n        return this.setState({ operator: value }, console.log(value));\n      }\n      const aux = eval(\n        this.state.opA.join(\"\") + this.state.operator + this.state.opB.join(\"\")\n      );\n      this.setState({\n        opA: [aux],\n        opB: [],\n        operator: value,\n        screen: aux,\n      });\n    } else if (this.state.operator === null) {\n      return this.setState({\n        opA: [...this.state.opA, value],\n        screen: [...this.state.opA, value],\n      });\n    } else {\n      this.setState({\n        opB: [...this.state.opB, value],\n        screen: [...this.state.opB, value],\n      });\n    }\n  };\n  render() {\n    //console.table(this.state);\n    console.log(this.state);\n\n    return (\n      <div>\n        <div className=\"display\">\n          <div className=\"displ\">{this.state.screen}</div>\n        </div>\n        <div className=\"btns\">\n          <button className=\"button\" onClick={() => this.handleClear()}>\n            C\n          </button>\n          <button\n            className=\"button\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"±\",\n                type: \"negative\",\n              })\n            }\n          >\n            ±\n          </button>\n          <button\n            className=\"button\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"%\",\n                type: \"percentage\",\n              })\n            }\n          >\n            %\n          </button>\n          <button\n            className=\"button\"\n            id=\"oprt\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"/\",\n                type: \"operator\",\n              })\n            }\n          >\n            /\n          </button>\n\n          <button\n            className=\"button\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"7\",\n                type: \"number\",\n              })\n            }\n          >\n            7\n          </button>\n          <button\n            className=\"button\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"8\",\n                type: \"number\",\n              })\n            }\n          >\n            8\n          </button>\n          <button\n            className=\"button\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"9\",\n                type: \"number\",\n              })\n            }\n          >\n            9\n          </button>\n          <button\n            className=\"button\"\n            id=\"oprt\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"*\",\n                type: \"operator\",\n              })\n            }\n          >\n            X\n          </button>\n\n          <button\n            className=\"button\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"4\",\n                type: \"number\",\n              })\n            }\n          >\n            4\n          </button>\n          <button\n            className=\"button\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"5\",\n                type: \"number\",\n              })\n            }\n          >\n            5\n          </button>\n          <button\n            className=\"button\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"6\",\n                type: \"number\",\n              })\n            }\n          >\n            6\n          </button>\n          <button\n            className=\"button\"\n            id=\"oprt\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"-\",\n                type: \"operator\",\n              })\n            }\n          >\n            -\n          </button>\n\n          <button\n            className=\"button\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"1\",\n                type: \"number\",\n              })\n            }\n          >\n            1\n          </button>\n          <button\n            className=\"button\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"2\",\n                type: \"number\",\n              })\n            }\n          >\n            2\n          </button>\n          <button\n            className=\"button\"\n            id=\"three\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"3\",\n                type: \"number\",\n              })\n            }\n          >\n            3\n          </button>\n          <button\n            className=\"button\"\n            id=\"oprt\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"+\",\n                type: \"operator\",\n              })\n            }\n          >\n            +\n          </button>\n          <button\n            className=\"button\"\n            id=\"zero\"\n            onClick={() =>\n              this.handleCalc({\n                value: \"0\",\n                type: \"number\",\n              })\n            }\n          >\n            0\n          </button>\n\n          <button\n            className=\"button\"\n            onClick={() =>\n              this.handleCalc({\n                value: \".\",\n                type: \"number\",\n              })\n            }\n          >\n            .\n          </button>\n          <button\n            className=\"button\"\n            id=\"oprt\"\n            onClick={() => this.handleResult()}\n          >\n            =\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"],"sourceRoot":""}